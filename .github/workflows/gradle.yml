# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle
on:
  push:
    branches: [ "master" ]    
jobs:
    RunTests-and-Generate-Reports:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: '11'
            distribution: 'temurin'
        - name: Setup Gradle
          uses: gradle/gradle-build-action@v2
          with:
            gradle-version: 7.4.2     ### This version will be installed and added to PATH, so used for cache-cleanup
        - name: Make gradlew executable
          run: chmod +x ./gradlew
      
        - name: Execute build with Gradle wrapper
          run: ./gradlew build clean test

        -  name: Upload Artifacts
           uses: actions/upload-artifact@v2
           if: always()
           with:
                name: test-report
                path: build/GradleReports/index.html
        - name: Dqwq
          if: always()
          uses: peaceiris/actions-gh-pages@v3
          with:
           publish_dir: build/GradleReports # Adjust to the directory containing your built site
           github_token: ${{ secrets.GITHUB_TOKEN }}
    Publish-HTML-Report:
      needs: RunTests-and-Generate-Reports
      if: always()
      runs-on: ubuntu-latest
      steps:
        # - name: Checkout Repository
        #   uses: actions/checkout@v2

        # Download the artifact
        - name: Download HTML Report Artifact
          uses: actions/download-artifact@v2
          with:
            name: test-report # Replace with the name of your artifact

      # Configure Git and GitHub Pages
        # - name: Set up Git and Configure User
        #   run: |
        #     git config user.name "GitHub Actions"
        #     git config user.email "komeershettyvinod@gmail.com"
        #     echo ".github/workflows" >> .gitignore

      # # Create a new branch to publish the HTML report
      #   - name: Create Report Branch
      #     continue-on-error: true
      #     run: |
      #       git checkout -b gh-pages
      #       git add .
      #       git commit -am "Publish HTML report"
      #       git push -u origin gh-pages

        # Publish the HTML report to GitHub Pages
        # - name: Publish to GitHub Pages
        #   uses: peaceiris/actions-gh-pages@v3
        #   with:
        #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        #     publish_dir: /home/runner/work/gitactiontest/gitactiontest/index.html # Change to the directory containing your HTML report 
        #     name: test-reports

        - name: Deploy to GitHub Pages
          run: |
            git config --global user.email "komeershettyvinod@gmail.com"
            git config --global user.name "vinodkomeershetty"
            git checkout --orphan gh-pages
            git rm -rf .
            mv /home/runner/work/gitactiontest/gitactiontest/* .
            git add .
            git commit -m "Deploy HTML report to GitHub Pages"
            git push -f origin gh-pages
            
        - name: Post the link to the report
          if: always()
          uses: Sibz/github-status-action@v1
          with: 
            authToken: ${{secrets.GITHUB_TOKEN}}
            context: 'Test report'
            sha: ${{github.event.pull_request.head.sha || github.sha}}
            state: success
            target_url: https://vinodkomeershetty.github.io/gitactiontest/${{ github.run_number }}/index.html
