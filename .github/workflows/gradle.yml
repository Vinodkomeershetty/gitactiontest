# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle
# on:
#   push:
#     branches: [ "master" ]

#   workflow_dispatch:
#     inputs:
#       environment:
#         description: 'Environment to run tests against'
#         type: choice
#         options:
#           - saucechrome
#           - chrome
on:
  push:
    branches: [ "NewBuild" ]
  workflow_dispatch:
    inputs:
      serverurl:
        description: 'Provide the  UI URL to run the test against'
        required: true
      suiteFile:
        description: 'Provide the  File to run the tests'
        required: true
      browserType:
        type: choice
        description: 'Select the browser for executing the tests'
        options:
          - saucechrome
          - chrome
jobs:
    RunTests-and-Generate-Reports:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: '11'
            distribution: 'temurin'
        - name: Setup Gradle
          uses: gradle/gradle-build-action@v2
          with:
            gradle-version: 7.4.2     ### This version will be installed and added to PATH, so used for cache-cleanup
        - name: Make gradlew executable
          run: chmod +x ./gradlew
      
        - name: Execute build with Gradle wrapper
          run: ./gradlew build clean test

        -  name: Upload Artifacts
           uses: actions/upload-artifact@v2
           if: always()
           with:
                name: test-reportsssss
                path: ./build/GradleReports/
        # - name: Dqwq
        #   if: always()
        #   uses: peaceiris/actions-gh-pages@v3
        #   with:
        #    publish_dir: build/GradleReports # Adjust to the directory containing your built site
        #    github_token: ${{ secrets.GITHUB_TOKEN }}

    # Publish-HTML-Report:
    #   needs: RunTests-and-Generate-Reports
    #   if: always()
    #   runs-on: ubuntu-latest
    #   steps:
        - name: Get test results history
          uses: actions/checkout@v3
          if: always()
          continue-on-error: true
          with:
              ref: gh-pages
              path: gh-pages

              
        - name: List Files in workspace
          if: always()
          run: |
              ls -R;   
              
        - name: Test marketplace action
          uses: PavanMudigonda/html-reporter-github-pages@v1.1
          id: test-report
          with:
            test_results: ./build/GradleReports/
            gh_pages: gh-pages
            results_history: results-history
          
        - name: List Files in workspace
          if: always()
          run: |
              ls -R;   

        - name: Publish Github Pages
          if: ${{ always() }}
          uses: peaceiris/actions-gh-pages@v3.8.0
          with:
              github_token: ${{ secrets.GITHUB_TOKEN }}
              publish_branch: gh-pages
              publish_dir: results-history
              keep_files: true
              
        - name: Post the link to the report
          if: always()
          uses: Sibz/github-status-action@v1
          with: 
              authToken: ${{secrets.GITHUB_TOKEN}}
              context: 'Test report'
              state: 'success'
              sha: ${{github.event.pull_request.head.sha || github.sha}}
              target_url: https://Vinodkomeershetty.github.io/gitactiontest/${{ github.run_number }}

        - name: GH Pages Push
          uses: PavanMudigonda/html-reporter-github-pages/composite@v1.1
          with:
              test_results: ./build/GradleReports/
              keep_reports: 20
              external_repository: https://Vinodkomeershetty.github.io/gitactiontest/
        - name: print link
          run: |
            echo "Results Link: $LINK"
          env:
            LINK: https://google.com
        # # Download the artifact
        # - name: Download HTML Report Artifact
        #   uses: actions/download-artifact@v2
        #   with:
        #     name: test-report # Replace with the name of your artifact

      # Configure Git and GitHub Pages
        # - name: Set up Git and Configure User
        #   run: |
        #     git config user.name "GitHub Actions"
        #     git config user.email "komeershettyvinod@gmail.com"
        #     echo ".github/workflows" >> .gitignore

      # # Create a new branch to publish the HTML report
      #   - name: Create Report Branch
      #     continue-on-error: true
      #     run: |
      #       git checkout -b gh-pages
      #       git add .
      #       git commit -am "Publish HTML report"
      #       git push -u origin gh-pages

        # Publish the HTML report to GitHub Pages
        # - name: Publish to GitHub Pages
        #   uses: peaceiris/actions-gh-pages@v3
        #   with:
        #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        #     publish_dir: /home/runner/work/gitactiontest/gitactiontest/index.html # Change to the directory containing your HTML report 
        #     name: test-reports

        # - name: Deploy to GitHub Pages
        #   run: |
        #     git config --global user.email "komeershettyvinod@gmail.com"
        #     git config --global user.name "vinodkomeershetty"
        #     git checkout --orphan gh-pages
        #     git rm -rf .
        #     mv /home/runner/work/gitactiontest/gitactiontest/* .
        #     git add .
        #     git commit -m "Deploy HTML report to GitHub Pages"
        #     git push -f origin gh-pages
            
        # - name: Post the link to the report
        #   if: always()
        #   uses: Sibz/github-status-action@v1
        #   with: 
        #     authToken: ${{secrets.GITHUB_TOKEN}}
        #     context: 'Test report'
        #     sha: ${{github.event.pull_request.head.sha || github.sha}}
        #     state: success
        #     target_url: https://vinodkomeershetty.github.io/gitactiontest/index.html
