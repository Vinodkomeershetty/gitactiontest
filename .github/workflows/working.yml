# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Final working Gradle
on:
  push:
    branches: [ "master" ]    
jobs:
    RunTests-and-Generate-Reports:
        runs-on: ubuntu-latest
        steps:
        - name: checkout repository
          uses: actions/checkout@v3
        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: '11'
            distribution: 'temurin'
        - name: Setup Gradle
          uses: gradle/gradle-build-action@v2
          with:
            gradle-version: 7.4.2     ### This version will be installed and added to PATH, so used for cache-cleanup
        - name: Make gradlew executable
          run: chmod +x ./gradlew
      
        - name: Execute build with Gradle wrapper
          continue-on-error: true
          run: ./gradlew build clean test

        - name: Generate Html link
          run: |
              echo "<a href="https://google.com">visit example</a>" >> $GITHUB_STEP_SUMMARY
              echo "dsdsd" >> $GITHUB_STEP_SUMMARY
              
        -  name: Upload Artifacts
           uses: actions/upload-artifact@v2
           if: always()
           with:
                name: test-report
                path: build/GradleReports/
                
        - name: Integrate with Gradle Reports
          if: always()
          uses: peaceiris/actions-gh-pages@v3
          with:
           publish_dir: build/GradleReports # Adjust to the directory containing your built site
           github_token: ${{ secrets.GITHUB_TOKEN }}
           
    Publish-HTML-Report:
      needs: RunTests-and-Generate-Reports
      if: always()
      runs-on: ubuntu-latest
      steps:

        - name: Deploy to GitHub Pages
          continue-on-error: true
          run: |
            github_token: ${{secrets.GITHUB_TOKEN}}
            # git config --global user.email "komeershettyvinod@gmail.com"
            # git config --global user.name "vinodkomeershetty"
            git checkout --orphan gh-pages
            git rm -rf .
            mv /home/runner/work/gitactiontest/gitactiontest/* .
            git add .
            git commit -m "Deploy HTML report to GitHub Pages"
            git push -f origin gh-pages
            
        - name: Generate Resultss
          run: |
              echo "<a href="https://vinodkomeershetty.github.io/gitactiontest/index.html">Detailed  Results</a>"  >> $GITHUB_STEP_SUMMARY
              echo "<h6>df  Results</h6>"  >> $GITHUB_STEP_SUMMARY

        - name: ANY REPROT - GH Pages Push - SAME REPO
          uses: tr/cicd_gh-actions-gh-pages@v1.8
          with:
            test_results: build/GradleReports/
            keep_reports: 20
            gh_pages: gh_pages # BRANCH NAME you like
          # subfolder: docs  # Level 1 Folder Structure you like
          # tool_name: cucumber # Level 2 Folder Structure you like
          # workflow_name: ${{ github.workflow }} # Level 3 Folder Structure you like
          # env: QA # Level 4 Folder Structure you like

        - name: Download HTML Report Artifact
          uses: actions/download-artifact@v2
          with:
               name: test-report
        - name: Install pythib
          uses: actions/setup-python@v3
        - name: Install pandoc
          run: |
               sudo apt-get install -y pandoc
        - name: Install pandora
          continue-on-error: true
          run: |
               pandoc -f html -t markdown_strict -o test-report.md  /home/runner/work/gitactiontest/gitactiontest/index.html
               echo ":: test-report.md" 
               echo  test-report.md
               cat  ./test-report.md
               cat "d'+ test-report.md
                 echo ":: set-output name=test-report.md::$(cat $1)" 
        - name: disp html summ in report page
          continue-on-error: true
          run: |
               chmod +x display-report.sh
               ./display-report.sh test-report.md
          id: display_report

    
        # - name: Post the link to the report
        #   if: always()
        #   uses: Sibz/github-status-action@v1
        #   with: 
        #     authToken: ${{secrets.GITHUB_TOKEN}}
        #     context: 'Test report'
        #     sha: ${{github.event.pull_request.head.sha || github.sha}}
        #     state: success
        #     target_url: https://vinodkomeershetty.github.io/gitactiontest/index.html
        #     run: |
        #       echo "<a href="https://vinodkomeershetty.github.io/gitactiontest/index.html">Detailed  Results</a>" >> $GITHUB_STEP_SUMMARY
            
